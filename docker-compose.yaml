services:
  task_api:
    build: task_api/
    ports:
    - "8080:8081"
    environment:
      - ENV_TYPE=dev
    volumes:
      - ./task_api:/app
    command: >
      sh -c "python main.py"
    depends_on:
      - postgres
      - rabbitmq
      - redis

  aio-worker:
    build: task_api/
    ports:
    - "8081:8081"
    environment:
      - ENV_TYPE=dev
    depends_on:
      - postgres
      - rabbitmq
      - redis
    volumes:
      - ./task_api:/app
    command: >
      sh -c "scripts/worker.sh 4"

  db-worker:
    build: db_worker/
    environment:
      - ENV_TYPE=dev
    depends_on:
      - postgres
    volumes:
      - ./db_worker:/app
    command: >
      sh -c "python main.py"

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: bd
    ports:
      - "5433:5432"
    volumes:
      - my_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d bd"]
      interval: 5s
      timeout: 5s
      retries: 5

  maildev:
    image: maildev/maildev
    ports:
      - "1080:1080"
      - "1025:1025"
    environment:
    - TZ=Europe/Moscow
    - MAILDEV_WEB_PORT=1080
    - MAILDEV_SMTP_PORT=1025
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "3"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "15672:15672"  
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    restart: always
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 5s
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: admin
    command: ["redis-server", "--requirepass", "admin"]

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafana-storage:/var/lib/grafana

volumes:
  my_postgres_data:
  grafana-storage:
  prometheusdata: